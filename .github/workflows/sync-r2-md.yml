# IMPORTANT:
# This file should be placed in the .github/workflows/ directory of the goku4vn/tway.dev repository.
# You also need to configure the following secrets in that repository's settings:
# - R2_ACCESS_KEY_ID: Your Cloudflare R2 Access Key ID.
# - R2_SECRET_ACCESS_KEY: Your Cloudflare R2 Secret Access Key.
# - R2_ACCOUNT_ID: Your Cloudflare Account ID.
# - R2_BUCKET_NAME: The name of your R2 bucket.

name: Sync Markdown from R2

on:
  workflow_dispatch:
    inputs:
      files:
        description: 'A JSON string array of file paths to sync from R2 (relative to the ai-posts/ directory)'
        required: true
        type: string

jobs:
  sync:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      actions: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install rclone
        run: |
          sudo apt-get update
          sudo apt-get install -y rclone

      - name: Configure rclone for Cloudflare R2
        env:
          R2_ENDPOINT: ${{ secrets.R2_ENDPOINT }}
          R2_ACCESS_KEY_ID: ${{ secrets.R2_ACCESS_KEY_ID }}
          R2_SECRET_ACCESS_KEY: ${{ secrets.R2_SECRET_ACCESS_KEY }}
          R2_ACCOUNT_ID: ${{ secrets.R2_ACCOUNT_ID }}
        run: |
          rclone config create r2 s3 provider=Cloudflare access_key_id=$R2_ACCESS_KEY_ID secret_access_key=$R2_SECRET_ACCESS_KEY endpoint=$R2_ENDPOINT --non-interactive

      - name: Sync specific posts from R2 bucket
        env:
          R2_BUCKET_NAME: ${{ secrets.R2_BUCKET_NAME }}
          FILES_JSON: ${{ inputs.files }}
        run: |
          # The input is a JSON array string. Parse it and write to a file for rclone.
          echo "$FILES_JSON" | jq -r '.[]' > files_to_sync.txt
          
          echo "Files to sync:"
          cat files_to_sync.txt
          
          # Use --files-from to sync only the specified files.
          # The source is the `ai-posts` directory in the R2 bucket.
          # The destination is the local `posts` directory.
          # The paths in files_to_sync.txt are relative to the source directory.
          rclone copy "r2:${R2_BUCKET_NAME}/ai-posts/" "posts/" --files-from files_to_sync.txt

      - name: Commit and push changes
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          git add posts/
          if git diff --staged --quiet; then
            echo "No changes to commit"
          else
            git commit -m "Sync: Update posts from R2"
            git push
          fi 
          
      - name: Trigger GitHub Pages deployment
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: gh workflow run main.yml --ref ${{ github.ref_name }} 
